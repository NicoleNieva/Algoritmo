#include "stdafx.h"
#include "conio.h"
#include <iostream>
#include <iomanip>
#include "stdlib.h"

#define FIL 30
#define COL 30

using namespace std;

void cargarMatriz(int mat[FIL][COL], int n, int m);
void mostrarMatriz(int mat[FIL][COL], int n, int m);
float promediodiagonalmatriz(int mat[FIL][COL], int n, int m);
void mostrartriangularinf (int mat[FIL][COL],int n , int m);
bool matCuad (int n, int m);

void main()
{int n, m, mat[FIL][COL],opc;
bool band;
//Aqui validacion de la fila!!!!
do{
	cout<<"Ingrese el numero de filas: ";
 cin>>n;
}while((n<=0)||(n>FIL));
do{
	cout<<"Ingrese el numero de columnas: ";
 cin>>m;
}while((m<=0)||(m>COL));
//Empieza el menu.
do{
	cout<<endl<<"MENU"<<endl;
	cout<<"1.cargarMatriz"<<endl;
	cout<<"2.mostrarMatriz"<<endl;
	cout<<"3.promedio de la diagonal Matriz"<<endl;
	cout<<"4.mostrartriangularinf"<<endl;
	cout<<"0.salir"<<endl;

	cout<<"Ingrese la opcion:";
	cin>>opc;
	switch(opc){
		case 1:
			cout<<"ingrese un elemento";
			cargarMatriz(mat, n, m);
			break;
		case 2:
			mostrarMatriz(mat,n,m);
			break;
		case 3:
			band= matCuad (n,m);
			if (band==false)
				cout<<endl<<"La matriz no es cuadrada, No se puede realizar la operacion";
			else
			{
				cout<<"el promedio es= "<<promediodiagonalmatriz(mat,n,m);

			}
			
			break;
		case 4:
			band= matCuad (n,m);
			if (band==false)
				cout<<endl<<"La matriz no es cuadrada, No se puede realizar la operacion";
			else
				mostrartriangularinf(mat,n,m);
			
			break;
		case 0:
			cout<<"Salir";
			break;
		
		default:
			cout<<"Error";
			break;

	}
	getch();
system ("cls");
}while(opc!=0);//Aqui termina el menu!!
}

void cargarMatriz(int mat[FIL][COL], int n, int m)
{
	int i,j;
	for(i=0;i<n;i++)
		for(j=0;j<m;j++)
			{
				cout<<"mat["<<i<<"]["<<j<<"]: ";
				cin>>mat[i][j];
			}
}

void mostrarMatriz(int mat[FIL][COL], int n, int m)
{
	int i,j;
	for(i=0;i<n;i++)
	{
		for(j=0;j<m;j++)
			{
				cout<<setw(4)<<mat[i][j];
			}
		cout<<endl;
	}
}

float promediodiagonalmatriz(int mat[FIL][COL], int n, int m)
{	int i,j,s=0;//inicializador.
	float p;//variable intermedia.
	for(i=0;i<n;i++)
			s = s + mat[i][i];//acumulador.
	p = s/n;
	return p;
}
void mostrartriangularinf (int mat[FIL][COL],int n , int m)
{
	int i,j;
	for(i=0;i<n;i++)
	{for(j=0;j<i;j++)
			
					
	    cout<<setw(4)<<mat[i][j];
				
				

			
		cout<<endl;
	}
}

bool matCuad(int n,int m)
{
	bool bandera=true;

	if (n!=m)
		bandera=false;

	return (bandera);
}
